{"ast":null,"code":"import axios from \"axios\";\n\nconst createUser = async user => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst listAllUsers = async () => {\n  return await axios.get(`${process.env.REACT_APP_API}/users/`);\n};\n\nconst read = async (params, credentials, signal) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/${params.userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      }\n    });\n    console.log(\"==== Response From Read in User-Api ===\", response);\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst update = async (params, credentials, user) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/${params.userId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      },\n      body: user\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst remove = async (params, credentials) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/${params.userId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      }\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst follow = async (params, credentials, followId) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/follow`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${credentials.t}`\n      },\n      body: JSON.stringify({\n        userId: params.userId,\n        followId: followId\n      })\n    });\n    console.log(\"====== Follow Response =====\");\n    console.log(response);\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n    console.log(\"FAIL FAIL FAIL FAIL FAIL TO FOLLOW\");\n  }\n};\n\nconst unfollow = async (params, credentials, unfollowId) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/unfollow`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      },\n      body: JSON.stringify({\n        userId: params.userId,\n        unfollowId\n      })\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst findPeople = async (params, credentials, signal) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/findpeople/${params.userId}`, {\n      method: \"GET\",\n      signal: signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      }\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst searchUsersList = async query => {\n  return await axios.get(`${process.env.REACT_APP_API}/users/search-users`, {\n    query\n  });\n};\n\nexport { createUser, listAllUsers, read, update, remove, follow, unfollow, findPeople, searchUsersList };","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/api/UserApi/userApi.js"],"names":["axios","createUser","user","response","fetch","process","env","REACT_APP_API","method","headers","Accept","body","JSON","stringify","json","err","console","log","listAllUsers","get","read","params","credentials","signal","userId","Authorization","t","update","remove","follow","followId","unfollow","unfollowId","findPeople","searchUsersList","query"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst createUser = async (user) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst listAllUsers = async () => {\n  return await axios.get(`${process.env.REACT_APP_API}/users/`);\n};\n\nconst read = async (params, credentials, signal) => {\n  try {\n    let response = await fetch(\n      `${process.env.REACT_APP_API}/users/${params.userId}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + credentials.t,\n        },\n      }\n    );\n    console.log(\"==== Response From Read in User-Api ===\", response);\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst update = async (params, credentials, user) => {\n  try {\n    let response = await fetch(\n      `${process.env.REACT_APP_API}/users/${params.userId}`,\n      {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + credentials.t,\n        },\n        body: user,\n      }\n    );\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst remove = async (params, credentials) => {\n  try {\n    let response = await fetch(\n      `${process.env.REACT_APP_API}/users/${params.userId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + credentials.t,\n        },\n      }\n    );\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst follow = async (params, credentials, followId) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/follow`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${credentials.t}`,\n      },\n      body: JSON.stringify({ userId: params.userId, followId: followId }),\n    });\n    console.log(\"====== Follow Response =====\");\n    console.log(response);\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n    console.log(\"FAIL FAIL FAIL FAIL FAIL TO FOLLOW\");\n  }\n};\n\nconst unfollow = async (params, credentials, unfollowId) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/users/unfollow`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t,\n      },\n      body: JSON.stringify({ userId: params.userId, unfollowId }),\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst findPeople = async (params, credentials, signal) => {\n  try {\n    let response = await fetch(\n      `${process.env.REACT_APP_API}/users/findpeople/${params.userId}`,\n      {\n        method: \"GET\",\n        signal: signal,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + credentials.t,\n        },\n      }\n    );\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst searchUsersList = async (query) => {\n  return await axios.get(`${process.env.REACT_APP_API}/users/search-users`, {\n    query,\n  });\n};\n\nexport {\n  createUser,\n  listAllUsers,\n  read,\n  update,\n  remove,\n  follow,\n  unfollow,\n  findPeople,\n  searchUsersList,\n};\n"]},"metadata":{},"sourceType":"module"}