{"ast":null,"code":"import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Avatar from\"@material-ui/core/Avatar\";import Typography from\"@material-ui/core/Typography\";import{Link}from\"react-router-dom\";import GridList from\"@material-ui/core/GridList\";import GridListTile from\"@material-ui/core/GridListTile\";import Button from\"@material-ui/core/Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{paddingTop:theme.spacing(2),display:\"flex\",flexWrap:\"wrap\",justifyContent:\"space-around\",overflow:\"hidden\",background:theme.palette.background.paper},root2:{\"& > *\":{margin:theme.spacing(1)}},bigAvatar:{width:60,height:60,margin:\"auto\"},gridList:{width:500,height:220},tileText:{textAlign:\"center\",underline:\"none\",marginTop:10,cursor:\"pointer\"},button:{margin:theme.spacing(3)},textDec:{textDecoration:\"none\"}};});/*\nThe FollowGrid component will take a list of users as props, display the avatars of the users with their names, and link to each user's profile. We can add this component as desired to the Profile view to display followings or followers.\n*/var FollowGrid=function FollowGrid(props){var classes=useStyles();return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(GridList,{cellHeight:160,className:classes.gridList,cols:4,children:props.people.map(function(person,i){return/*#__PURE__*/_jsx(GridListTile,{style:{height:120},children:/*#__PURE__*/_jsxs(Link,{to:\"/user/\".concat(person._id),className:classes.textDec,children:[/*#__PURE__*/_jsx(Avatar,{src:\"\".concat(process.env.REACT_APP_API,\"/users/photo/\").concat(person._id)//   src={\"/api/users/photo/\" + person._id}\n,className:classes.bigAvatar}),/*#__PURE__*/_jsx(Typography,{className:classes.tileText,style:{color:\"#333\"},children:person.name})]})},i);})})});};export default FollowGrid;","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Follow/FollowGrid.jsx"],"names":["React","makeStyles","Avatar","Typography","Link","GridList","GridListTile","Button","useStyles","theme","root","paddingTop","spacing","display","flexWrap","justifyContent","overflow","background","palette","paper","root2","margin","bigAvatar","width","height","gridList","tileText","textAlign","underline","marginTop","cursor","button","textDec","textDecoration","FollowGrid","props","classes","people","map","person","i","_id","process","env","REACT_APP_API","color","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,SAACQ,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,UAAU,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR,CAEJC,OAAO,CAAE,MAFL,CAGJC,QAAQ,CAAE,MAHN,CAIJC,cAAc,CAAE,cAJZ,CAKJC,QAAQ,CAAE,QALN,CAMJC,UAAU,CAAER,KAAK,CAACS,OAAN,CAAcD,UAAd,CAAyBE,KANjC,CADiC,CASvCC,KAAK,CAAE,CACL,QAAS,CACPC,MAAM,CAAEZ,KAAK,CAACG,OAAN,CAAc,CAAd,CADD,CADJ,CATgC,CAcvCU,SAAS,CAAE,CACTC,KAAK,CAAE,EADE,CAETC,MAAM,CAAE,EAFC,CAGTH,MAAM,CAAE,MAHC,CAd4B,CAmBvCI,QAAQ,CAAE,CACRF,KAAK,CAAE,GADC,CAERC,MAAM,CAAE,GAFA,CAnB6B,CAuBvCE,QAAQ,CAAE,CACRC,SAAS,CAAE,QADH,CAERC,SAAS,CAAE,MAFH,CAGRC,SAAS,CAAE,EAHH,CAIRC,MAAM,CAAE,SAJA,CAvB6B,CA6BvCC,MAAM,CAAE,CACNV,MAAM,CAAEZ,KAAK,CAACG,OAAN,CAAc,CAAd,CADF,CA7B+B,CAgCvCoB,OAAO,CAAE,CACPC,cAAc,CAAE,MADT,CAhC8B,CAAZ,EAAD,CAA5B,CAqCA;AACA;AACA,EAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,OAAO,CAAG5B,SAAS,EAAzB,CACA,mBACE,YAAK,SAAS,CAAE4B,OAAO,CAAC1B,IAAxB,uBACE,KAAC,QAAD,EAAU,UAAU,CAAE,GAAtB,CAA2B,SAAS,CAAE0B,OAAO,CAACX,QAA9C,CAAwD,IAAI,CAAE,CAA9D,UACGU,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,SAACC,MAAD,CAASC,CAAT,CAAe,CAC/B,mBACE,KAAC,YAAD,EAAc,KAAK,CAAE,CAAEhB,MAAM,CAAE,GAAV,CAArB,uBACE,MAAC,IAAD,EAAM,EAAE,iBAAWe,MAAM,CAACE,GAAlB,CAAR,CAAiC,SAAS,CAAEL,OAAO,CAACJ,OAApD,wBACE,KAAC,MAAD,EACE,GAAG,WAAKU,OAAO,CAACC,GAAR,CAAYC,aAAjB,yBAA8CL,MAAM,CAACE,GAArD,CACH;AAFF,CAGE,SAAS,CAAEL,OAAO,CAACd,SAHrB,EADF,cAME,KAAC,UAAD,EACE,SAAS,CAAEc,OAAO,CAACV,QADrB,CAEE,KAAK,CAAE,CAAEmB,KAAK,CAAE,MAAT,CAFT,UAIGN,MAAM,CAACO,IAJV,EANF,GADF,EAA2CN,CAA3C,CADF,CAiBD,CAlBA,CADH,EADF,EADF,CAyBD,CA3BD,CAiCA,cAAeN,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport propTypes from \"prop-types\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    background: theme.palette.background.paper,\n  },\n  root2: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60,\n    margin: \"auto\",\n  },\n  gridList: {\n    width: 500,\n    height: 220,\n  },\n  tileText: {\n    textAlign: \"center\",\n    underline: \"none\",\n    marginTop: 10,\n    cursor: \"pointer\",\n  },\n  button: {\n    margin: theme.spacing(3),\n  },\n  textDec: {\n    textDecoration: \"none\",\n  },\n}));\n\n/*\nThe FollowGrid component will take a list of users as props, display the avatars of the users with their names, and link to each user's profile. We can add this component as desired to the Profile view to display followings or followers.\n*/\n\nconst FollowGrid = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={160} className={classes.gridList} cols={4}>\n        {props.people.map((person, i) => {\n          return (\n            <GridListTile style={{ height: 120 }} key={i}>\n              <Link to={`/user/${person._id}`} className={classes.textDec}>\n                <Avatar\n                  src={`${process.env.REACT_APP_API}/users/photo/${person._id}`}\n                  //   src={\"/api/users/photo/\" + person._id}\n                  className={classes.bigAvatar}\n                />\n                <Typography\n                  className={classes.tileText}\n                  style={{ color: \"#333\" }}\n                >\n                  {person.name}\n                </Typography>\n              </Link>\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </div>\n  );\n};\n\nFollowGrid.propTypes = {\n  people: propTypes.array.isRequired,\n};\n\nexport default FollowGrid;\n"]},"metadata":{},"sourceType":"module"}