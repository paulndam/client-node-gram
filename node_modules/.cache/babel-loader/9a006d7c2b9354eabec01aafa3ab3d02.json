{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import auth from\"../../utils/Auth/authHelper\";import CardHeader from\"@material-ui/core/CardHeader\";import TextField from\"@material-ui/core/TextField\";import Avatar from\"@material-ui/core/Avatar\";import Icon from\"@material-ui/core/Icon\";import{Link}from\"react-router-dom\";import{comment,unComment}from\"../../api/PostApi/postApi\";import DeleteForeverIcon from\"@material-ui/icons/DeleteForever\";import useStyles from\"./styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Comments=function Comments(props){var classes=useStyles();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var jwt=auth.isAuthenticated();var handleChange=function handleChange(e){setText(e.target.value);};var addComment=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(e.keyCode===13&&e.target.value)){_context.next=8;break;}e.preventDefault();_context.next=4;return comment({userId:jwt.user._id},{t:jwt.token},props.postId,{text:text});case 4:data=_context.sent;console.log(\"--- Comment data ---\");console.log(data);if(data.error){console.log(data.error);}else{setText(\"\");props.updateComments(data.comments);}case 8:case\"end\":return _context.stop();}}},_callee);}));return function addComment(_x){return _ref.apply(this,arguments);};}();var deleteComment=function deleteComment(comment){return function(e){unComment({userId:jwt.user._id},{t:jwt.token},props.postId,comment).then(function(data){console.log(\"--- delete Comment data --- \");console.log(data);if(data.error){console.log(data.error);}else{props.updateComments(data.comments);}});};};var commentBody=function commentBody(item){return/*#__PURE__*/_jsxs(\"p\",{className:classes.commentText,children:[/*#__PURE__*/_jsx(Link,{to:\"/user/\".concat(item.postedBy._id),className:classes.textDec,children:item.postedBy.name}),/*#__PURE__*/_jsx(\"br\",{}),item.text,/*#__PURE__*/_jsxs(\"span\",{className:classes.commentDate,children:[new Date(item.created).toDateString(),\" |\",auth.isAuthenticated().user._id===item.postedBy._id&&/*#__PURE__*/_jsx(DeleteForeverIcon,{onClick:deleteComment(item),className:classes.commentDelete,color:\"secondary\",children:\"Delete\"})]})]});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CardHeader,{avatar:/*#__PURE__*/_jsx(Avatar,{className:classes.smallAvatar,src:\"\".concat(process.env.REACT_APP_API,\"/users/photo/\").concat(auth.isAuthenticated().user._id)}),title:/*#__PURE__*/_jsx(TextField,{onKeyDown:addComment,multiline:true,value:text,onChange:handleChange,placeholder:\"Write something ...\",className:classes.commentField,margin:\"normal\"}),className:classes.cardHeader}),props.comments.map(function(item,i){return/*#__PURE__*/_jsx(CardHeader,{avatar:/*#__PURE__*/_jsx(Avatar,{className:classes.smallAvatar,src:\"\".concat(process.env.REACT_APP_API,\"/users/photo/\").concat(item.postedBy._id)}),title:commentBody(item),className:classes.cardHeader},i);})]});};export default Comments;","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Comments/Comments.jsx"],"names":["React","useState","auth","CardHeader","TextField","Avatar","Icon","Link","comment","unComment","DeleteForeverIcon","useStyles","Comments","props","classes","text","setText","jwt","isAuthenticated","handleChange","e","target","value","addComment","keyCode","preventDefault","userId","user","_id","t","token","postId","data","console","log","error","updateComments","comments","deleteComment","then","commentBody","item","commentText","postedBy","textDec","name","commentDate","Date","created","toDateString","commentDelete","smallAvatar","process","env","REACT_APP_API","commentField","cardHeader","map","i"],"mappings":"8fAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,6BAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,CAAkBC,SAAlB,KAAmC,2BAAnC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA,cAAwBV,QAAQ,CAAC,EAAD,CAAhC,wCAAOc,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,GAAG,CAAGf,IAAI,CAACgB,eAAL,EAAZ,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,UAAU,0FAAG,iBAAOH,CAAP,gIACbA,CAAC,CAACI,OAAF,GAAc,EAAd,EAAoBJ,CAAC,CAACC,MAAF,CAASC,KADhB,0BAEfF,CAAC,CAACK,cAAF,GAFe,sBAIIjB,CAAAA,OAAO,CACxB,CAAEkB,MAAM,CAAET,GAAG,CAACU,IAAJ,CAASC,GAAnB,CADwB,CAExB,CAAEC,CAAC,CAAEZ,GAAG,CAACa,KAAT,CAFwB,CAGxBjB,KAAK,CAACkB,MAHkB,CAIxB,CACEhB,IAAI,CAAEA,IADR,CAJwB,CAJX,QAITiB,IAJS,eAafC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA,GAAIA,IAAI,CAACG,KAAT,CAAgB,CACdF,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB,EACD,CAFD,IAEO,CACLnB,OAAO,CAAC,EAAD,CAAP,CACAH,KAAK,CAACuB,cAAN,CAAqBJ,IAAI,CAACK,QAA1B,EACD,CApBc,sDAAH,kBAAVd,CAAAA,UAAU,4CAAhB,CAwBA,GAAMe,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAC9B,OAAD,QAAa,UAACY,CAAD,CAAO,CACxCX,SAAS,CACP,CAAEiB,MAAM,CAAET,GAAG,CAACU,IAAJ,CAASC,GAAnB,CADO,CAEP,CAAEC,CAAC,CAAEZ,GAAG,CAACa,KAAT,CAFO,CAGPjB,KAAK,CAACkB,MAHC,CAIPvB,OAJO,CAAT,CAKE+B,IALF,CAKO,SAACP,IAAD,CAAU,CACfC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA,GAAIA,IAAI,CAACG,KAAT,CAAgB,CACdF,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB,EACD,CAFD,IAEO,CACLtB,KAAK,CAACuB,cAAN,CAAqBJ,IAAI,CAACK,QAA1B,EACD,CACF,CAbD,EAcD,CAfqB,EAAtB,CAiBA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAU,CAC5B,mBACE,WAAG,SAAS,CAAE3B,OAAO,CAAC4B,WAAtB,wBACE,KAAC,IAAD,EAAM,EAAE,iBAAWD,IAAI,CAACE,QAAL,CAAcf,GAAzB,CAAR,CAAwC,SAAS,CAAEd,OAAO,CAAC8B,OAA3D,UACGH,IAAI,CAACE,QAAL,CAAcE,IADjB,EADF,cAIE,aAJF,CAKGJ,IAAI,CAAC1B,IALR,cAME,cAAM,SAAS,CAAED,OAAO,CAACgC,WAAzB,WACG,GAAIC,CAAAA,IAAJ,CAASN,IAAI,CAACO,OAAd,EAAuBC,YAAvB,EADH,MAEG/C,IAAI,CAACgB,eAAL,GAAuBS,IAAvB,CAA4BC,GAA5B,GAAoCa,IAAI,CAACE,QAAL,CAAcf,GAAlD,eACC,KAAC,iBAAD,EACE,OAAO,CAAEU,aAAa,CAACG,IAAD,CADxB,CAEE,SAAS,CAAE3B,OAAO,CAACoC,aAFrB,CAGE,KAAK,CAAC,WAHR,oBAHJ,GANF,GADF,CAqBD,CAtBD,CAwBA,mBACE,oCACE,KAAC,UAAD,EACE,MAAM,cACJ,KAAC,MAAD,EACE,SAAS,CAAEpC,OAAO,CAACqC,WADrB,CAEE,GAAG,WAAKC,OAAO,CAACC,GAAR,CAAYC,aAAjB,yBACDpD,IAAI,CAACgB,eAAL,GAAuBS,IAAvB,CAA4BC,GAD3B,CAFL,EAFJ,CASE,KAAK,cACH,KAAC,SAAD,EACE,SAAS,CAAEL,UADb,CAEE,SAAS,KAFX,CAGE,KAAK,CAAER,IAHT,CAIE,QAAQ,CAAEI,YAJZ,CAKE,WAAW,CAAC,qBALd,CAME,SAAS,CAAEL,OAAO,CAACyC,YANrB,CAOE,MAAM,CAAC,QAPT,EAVJ,CAoBE,SAAS,CAAEzC,OAAO,CAAC0C,UApBrB,EADF,CAuBG3C,KAAK,CAACwB,QAAN,CAAeoB,GAAf,CAAmB,SAAChB,IAAD,CAAOiB,CAAP,CAAa,CAC/B,mBACE,KAAC,UAAD,EACE,MAAM,cACJ,KAAC,MAAD,EACE,SAAS,CAAE5C,OAAO,CAACqC,WADrB,CAEE,GAAG,WAAKC,OAAO,CAACC,GAAR,CAAYC,aAAjB,yBAA8Cb,IAAI,CAACE,QAAL,CAAcf,GAA5D,CAFL,EAFJ,CAOE,KAAK,CAAEY,WAAW,CAACC,IAAD,CAPpB,CAQE,SAAS,CAAE3B,OAAO,CAAC0C,UARrB,EASOE,CATP,CADF,CAaD,CAdA,CAvBH,GADF,CAyCD,CAnHD,CA2HA,cAAe9C,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from \"@material-ui/core/Icon\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { comment, unComment } from \"../../api/PostApi/postApi\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport useStyles from \"./styles\";\n\nconst Comments = (props) => {\n  const classes = useStyles();\n  const [text, setText] = useState(\"\");\n  const jwt = auth.isAuthenticated();\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const addComment = async (e) => {\n    if (e.keyCode === 13 && e.target.value) {\n      e.preventDefault();\n\n      const data = await comment(\n        { userId: jwt.user._id },\n        { t: jwt.token },\n        props.postId,\n        {\n          text: text,\n        }\n      );\n\n      console.log(\"--- Comment data ---\");\n      console.log(data);\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setText(\"\");\n        props.updateComments(data.comments);\n      }\n    }\n  };\n\n  const deleteComment = (comment) => (e) => {\n    unComment(\n      { userId: jwt.user._id },\n      { t: jwt.token },\n      props.postId,\n      comment\n    ).then((data) => {\n      console.log(\"--- delete Comment data --- \");\n      console.log(data);\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        props.updateComments(data.comments);\n      }\n    });\n  };\n\n  const commentBody = (item) => {\n    return (\n      <p className={classes.commentText}>\n        <Link to={`/user/${item.postedBy._id}`} className={classes.textDec}>\n          {item.postedBy.name}\n        </Link>\n        <br />\n        {item.text}\n        <span className={classes.commentDate}>\n          {new Date(item.created).toDateString()} |\n          {auth.isAuthenticated().user._id === item.postedBy._id && (\n            <DeleteForeverIcon\n              onClick={deleteComment(item)}\n              className={classes.commentDelete}\n              color=\"secondary\"\n            >\n              Delete\n            </DeleteForeverIcon>\n          )}\n        </span>\n      </p>\n    );\n  };\n\n  return (\n    <div>\n      <CardHeader\n        avatar={\n          <Avatar\n            className={classes.smallAvatar}\n            src={`${process.env.REACT_APP_API}/users/photo/${\n              auth.isAuthenticated().user._id\n            }`}\n          />\n        }\n        title={\n          <TextField\n            onKeyDown={addComment}\n            multiline\n            value={text}\n            onChange={handleChange}\n            placeholder=\"Write something ...\"\n            className={classes.commentField}\n            margin=\"normal\"\n          />\n        }\n        className={classes.cardHeader}\n      />\n      {props.comments.map((item, i) => {\n        return (\n          <CardHeader\n            avatar={\n              <Avatar\n                className={classes.smallAvatar}\n                src={`${process.env.REACT_APP_API}/users/photo/${item.postedBy._id}`}\n              />\n            }\n            title={commentBody(item)}\n            className={classes.cardHeader}\n            key={i}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nComments.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  updateComments: PropTypes.func.isRequired,\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}