{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Post/PostList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport { listNewsFeed } from \"../../api/PostApi/postApi\";\nimport PropTypes from \"prop-types\";\nimport Post from \"./Post\";\nimport LoadingSpinner from \"../../pages/Spinner/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  // const [listItem, setListItem] = useState(\n  //   Array.from(Array(5).keys(), (n) => (n = +1))\n  // );\n  // const [loading, setLoading] = useState(false);\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", handleScroll);\n  //   return () => window.removeEventListener(\"scroll\", handleScroll);\n  // }, []);\n  // const handleScroll = () => {\n  //   if (\n  //     window.innerHeight + document.documentElement.scrollTop !==\n  //     document.documentElement.offsetHeight\n  //   )\n  //     return;\n  //   //setLoading(true);\n  // };\n  // useEffect(() => {\n  //   if (!loading) return;\n  // },[]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"24px\"\n    },\n    children: props.posts.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        post: item,\n        onRemove: props.removeUpdate\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostList;\nPostList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  removeUpdate: PropTypes.func.isRequired\n};\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Post/PostList.jsx"],"names":["React","useState","useEffect","auth","listNewsFeed","PropTypes","Post","LoadingSpinner","PostList","props","marginTop","posts","map","item","i","removeUpdate","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,cAQGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,0BAAO,QAAC,IAAD;AAAM,QAAA,IAAI,EAAED,IAAZ;AAA0B,QAAA,QAAQ,EAAEJ,KAAK,CAACM;AAA1C,SAAuBD,CAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvCD;;KAAMN,Q;AAyCNA,QAAQ,CAACQ,SAAT,GAAqB;AACnBL,EAAAA,KAAK,EAAEN,SAAS,CAACY,KAAV,CAAgBC,UADJ;AAEnBH,EAAAA,YAAY,EAAEV,SAAS,CAACc,IAAV,CAAeD;AAFV,CAArB;AAKA,eAAeV,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport { listNewsFeed } from \"../../api/PostApi/postApi\";\nimport PropTypes from \"prop-types\";\nimport Post from \"./Post\";\nimport LoadingSpinner from \"../../pages/Spinner/LoadingSpinner\";\n\nconst PostList = (props) => {\n  // const [listItem, setListItem] = useState(\n  //   Array.from(Array(5).keys(), (n) => (n = +1))\n  // );\n  // const [loading, setLoading] = useState(false);\n\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", handleScroll);\n  //   return () => window.removeEventListener(\"scroll\", handleScroll);\n  // }, []);\n\n  // const handleScroll = () => {\n  //   if (\n  //     window.innerHeight + document.documentElement.scrollTop !==\n  //     document.documentElement.offsetHeight\n  //   )\n  //     return;\n  //   //setLoading(true);\n  // };\n\n  // useEffect(() => {\n  //   if (!loading) return;\n\n  // },[]);\n\n  return (\n    <div style={{ marginTop: \"24px\" }}>\n      {/* {loading ? (\n        <LoadingSpinner />\n      ) : (\n        props.posts.map((item, i) => {\n          return <Post post={item} key={i} onRemove={props.removeUpdate} />;\n        })\n      )} */}\n      {props.posts.map((item, i) => {\n        return <Post post={item} key={i} onRemove={props.removeUpdate} />;\n      })}\n    </div>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  removeUpdate: PropTypes.func.isRequired,\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}