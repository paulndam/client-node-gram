{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Users/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { read, follow } from \"../../api/UserApi/userApi\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport MenuBar from \"../Menu/MenuBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Person from \"@material-ui/icons/Person\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DeleteUser from \"./DeleteUser\";\nimport Footer from \"../Footer/Footer\";\nimport FollowButtons from \"../Follow/FollowButtons\";\nimport ProfileTab from \"./ProfileTab\";\nimport { listByUser } from \"../../api/PostApi/postApi\";\nimport LoadingSpinner from \"../../pages/Spinner/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: \"auto\",\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(5)\n  }),\n  title: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.protectedTitle\n  },\n  textDec: {\n    textDecoration: \"none\"\n  }\n}));\n\nconst Profile = ({\n  match\n}) => {\n  _s();\n\n  var _values$user;\n\n  // This profile information can be fetched from the server only if the user is signed in, and to verify this, the component has to provide the JWT to the read fetch call, otherwise, the user should be redirected to the Sign In view.\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    user: {\n      following: [],\n      followers: []\n    },\n    redirectToSignin: false,\n    following: false\n  });\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false); //const [redirectToSignIn, setRedirectToSignIn] = useState(false);\n\n  const jwt = auth.isAuthenticated();\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    setLoading(true);\n    read({\n      userId: match.params.userId\n    }, {\n      t: jwt.token\n    }, signal).then(data => {\n      console.log(\"--- Data In UseEffect ---\");\n      console.log(data);\n\n      if (data && data.error) {\n        setValues({ ...values,\n          redirectToSignin: true\n        });\n      } else {\n        setLoading(false);\n        let following = checkFollow(data);\n        console.log(\"-----Checking following in UseEffect----\");\n        console.log(following);\n        setValues({ ...values,\n          user: data,\n          following: following\n        });\n        loadPosts(data._id);\n      }\n    });\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [match.params.userId]);\n  /*\n  the checkFollow method will check if the signed-in user exists in the fetched user's followers list, then return the match if found, otherwise return undefined if a match is not found.\n  */\n\n  const checkFollow = user => {\n    const match = user.followers.some(follower => {\n      return follower._id === jwt.user._id;\n    });\n    console.log(\"---- match ---\");\n    console.log(match);\n    return match;\n  };\n\n  const clickFollowButton = callApi => {\n    const jwt = auth.isAuthenticated();\n    console.log(\"--- JWT From ClickFollow button in Profile ---\");\n    console.log(jwt);\n    callApi({\n      userId: jwt.user._id\n    }, {\n      t: jwt.token\n    }, values.user._id).then(data => {\n      console.log(\"---Data From ClickFollowButton in Profile Component ----\");\n      console.log(data);\n\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n        console.log(data.error);\n      } else {\n        setValues({ ...values,\n          user: data,\n          following: !values.following\n        });\n      }\n    });\n  }; // this method will fetch the api that will load all the post of a unique user. we will make use of the listByUser api call method .\n\n\n  const loadPosts = user => {\n    setLoading(true);\n    listByUser({\n      userId: user\n    }, {\n      t: jwt.token\n    }).then(data => {\n      console.log(\"-- post of a unique user in their profile --\");\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setLoading(false);\n        setPosts(data);\n      }\n    });\n  }; // removing post as well.\n\n\n  const removePost = post => {\n    const updatedPosts = posts;\n    const index = updatedPosts.indexOf(post);\n    updatedPosts.splice(index, 1);\n    setPosts(updatedPosts);\n  };\n\n  const photoUrl = values.user._id && `${process.env.REACT_APP_API}/users/photo/${values.user._id}?${new Date().getTime()}`;\n\n  if (values.redirectToSignIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        children: values.user.followers.length === 1 ? `${values.user.followers.length} Follower` : `${values.user.followers.length} Followers`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: photoUrl,\n              children: /*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: values.user.name,\n            secondary: values.user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), auth.isAuthenticated().user && auth.isAuthenticated().user._id === values.user._id ? /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/user/edit/${values.user._id}`,\n              className: classes.textDec,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Edit\",\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(DeleteUser, {\n              userId: values.user._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(FollowButtons, {\n            following: values.following,\n            onButtonClick: clickFollowButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `About: ${values.user.about === \"undefined\" ? \"ðŸ¤ \" : values.user.about}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Joined: \" + new Date((_values$user = values.user) === null || _values$user === void 0 ? void 0 : _values$user.created).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProfileTab, {\n        user: values.user,\n        posts: posts,\n        removePostUpdate: removePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"J5DdXfpleIxQged+hYBj4Ni14Vo=\", false, function () {\n  return [useStyles];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Users/Profile.jsx"],"names":["Paper","React","useState","useEffect","Redirect","Link","read","follow","auth","MenuBar","makeStyles","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","Avatar","IconButton","Typography","Edit","Person","Divider","DeleteUser","Footer","FollowButtons","ProfileTab","listByUser","LoadingSpinner","useStyles","theme","root","mixins","gutters","maxWidth","margin","padding","spacing","marginTop","title","color","palette","protectedTitle","textDec","textDecoration","Profile","match","classes","values","setValues","user","following","followers","redirectToSignin","posts","setPosts","loading","setLoading","jwt","isAuthenticated","abortController","AbortController","signal","userId","params","t","token","then","data","console","log","error","checkFollow","loadPosts","_id","cleanup","abort","some","follower","clickFollowButton","callApi","removePost","post","updatedPosts","index","indexOf","splice","photoUrl","process","env","REACT_APP_API","Date","getTime","redirectToSignIn","length","name","email","about","created","toDateString"],"mappings":"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","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { read, follow } from \"../../api/UserApi/userApi\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport MenuBar from \"../Menu/MenuBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Person from \"@material-ui/icons/Person\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DeleteUser from \"./DeleteUser\";\nimport Footer from \"../Footer/Footer\";\nimport FollowButtons from \"../Follow/FollowButtons\";\nimport ProfileTab from \"./ProfileTab\";\nimport { listByUser } from \"../../api/PostApi/postApi\";\nimport LoadingSpinner from \"../../pages/Spinner/LoadingSpinner\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: \"auto\",\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(5),\n  }),\n  title: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.protectedTitle,\n  },\n  textDec: {\n    textDecoration: \"none\",\n  },\n}));\n\nconst Profile = ({ match }) => {\n  // This profile information can be fetched from the server only if the user is signed in, and to verify this, the component has to provide the JWT to the read fetch call, otherwise, the user should be redirected to the Sign In view.\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    user: { following: [], followers: [] },\n    redirectToSignin: false,\n    following: false,\n  });\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  //const [redirectToSignIn, setRedirectToSignIn] = useState(false);\n  const jwt = auth.isAuthenticated();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    setLoading(true);\n    read(\n      {\n        userId: match.params.userId,\n      },\n      { t: jwt.token },\n      signal\n    ).then((data) => {\n      console.log(\"--- Data In UseEffect ---\");\n      console.log(data);\n      if (data && data.error) {\n        setValues({ ...values, redirectToSignin: true });\n      } else {\n        setLoading(false);\n        let following = checkFollow(data);\n        console.log(\"-----Checking following in UseEffect----\");\n        console.log(following);\n        setValues({ ...values, user: data, following: following });\n        loadPosts(data._id);\n      }\n    });\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [match.params.userId]);\n\n  /*\n  the checkFollow method will check if the signed-in user exists in the fetched user's followers list, then return the match if found, otherwise return undefined if a match is not found.\n  */\n\n  const checkFollow = (user) => {\n    const match = user.followers.some((follower) => {\n      return follower._id === jwt.user._id;\n    });\n    console.log(\"---- match ---\");\n    console.log(match);\n    return match;\n  };\n\n  const clickFollowButton = (callApi) => {\n    const jwt = auth.isAuthenticated();\n    console.log(\"--- JWT From ClickFollow button in Profile ---\");\n    console.log(jwt);\n    callApi({ userId: jwt.user._id }, { t: jwt.token }, values.user._id).then(\n      (data) => {\n        console.log(\"---Data From ClickFollowButton in Profile Component ----\");\n        console.log(data);\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n          console.log(data.error);\n        } else {\n          setValues({ ...values, user: data, following: !values.following });\n        }\n      }\n    );\n  };\n\n  // this method will fetch the api that will load all the post of a unique user. we will make use of the listByUser api call method .\n\n  const loadPosts = (user) => {\n    setLoading(true);\n    listByUser({ userId: user }, { t: jwt.token }).then((data) => {\n      console.log(\"-- post of a unique user in their profile --\");\n      console.log(data);\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setLoading(false);\n        setPosts(data);\n      }\n    });\n  };\n\n  // removing post as well.\n  const removePost = (post) => {\n    const updatedPosts = posts;\n    const index = updatedPosts.indexOf(post);\n    updatedPosts.splice(index, 1);\n    setPosts(updatedPosts);\n  };\n\n  const photoUrl =\n    values.user._id &&\n    `${process.env.REACT_APP_API}/users/photo/${\n      values.user._id\n    }?${new Date().getTime()}`;\n\n  if (values.redirectToSignIn) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return (\n    <div>\n      <MenuBar />\n      {loading ? (\n        <LoadingSpinner />\n      ) : (\n        <Paper className={classes.root} elevation={4}>\n          <Typography variant=\"h6\" className={classes.title}>\n            {values.user.followers.length === 1\n              ? `${values.user.followers.length} Follower`\n              : `${values.user.followers.length} Followers`}\n          </Typography>\n          <List dense>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar src={photoUrl}>\n                  <Person />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={values.user.name}\n                secondary={values.user.email}\n              />{\" \"}\n              <br />\n              {auth.isAuthenticated().user &&\n              auth.isAuthenticated().user._id === values.user._id ? (\n                <ListItemSecondaryAction>\n                  <Link\n                    to={`/user/edit/${values.user._id}`}\n                    className={classes.textDec}\n                  >\n                    <IconButton aria-label=\"Edit\" color=\"primary\">\n                      <Edit />\n                    </IconButton>\n                  </Link>\n                  <DeleteUser userId={values.user._id} />\n                </ListItemSecondaryAction>\n              ) : (\n                <FollowButtons\n                  following={values.following}\n                  onButtonClick={clickFollowButton}\n                />\n              )}\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText\n                primary={`About: ${\n                  values.user.about === \"undefined\" ? \"ðŸ¤ \" : values.user.about\n                }`}\n              ></ListItemText>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText\n                primary={\n                  \"Joined: \" + new Date(values.user?.created).toDateString()\n                }\n              />\n            </ListItem>\n          </List>\n          <ProfileTab\n            user={values.user}\n            posts={posts}\n            removePostUpdate={removePost}\n          />\n        </Paper>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}