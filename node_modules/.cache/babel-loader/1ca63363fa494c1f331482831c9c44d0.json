{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import auth from\"../../utils/Auth/authHelper\";import{listNewsFeed}from\"../../api/PostApi/postApi\";import Post from\"./Post\";import LoadingSpinner from\"../../pages/Spinner/LoadingSpinner\";import{jsx as _jsx}from\"react/jsx-runtime\";var PostList=function PostList(props){// const [listItem, setListItem] = useState(\n//   Array.from(Array(5).keys(), (n) => (n = +1))\n// );\n// const [loading, setLoading] = useState(false);\n// useEffect(() => {\n//   window.addEventListener(\"scroll\", handleScroll);\n//   return () => window.removeEventListener(\"scroll\", handleScroll);\n// }, []);\n// const handleScroll = () => {\n//   if (\n//     window.innerHeight + document.documentElement.scrollTop !==\n//     document.documentElement.offsetHeight\n//   )\n//     return;\n//   //setLoading(true);\n// };\n// useEffect(() => {\n//   if (!loading) return;\n// },[]);\nreturn/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"24px\"},children:props.posts.map(function(item,i){return/*#__PURE__*/_jsx(Post,{post:item,onRemove:props.removeUpdate},i);})});};export default PostList;","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Post/PostList.jsx"],"names":["React","useState","useEffect","auth","listNewsFeed","Post","LoadingSpinner","PostList","props","marginTop","posts","map","item","i","removeUpdate"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,6BAAjB,CACA,OAASC,YAAT,KAA6B,2BAA7B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,mBACE,YAAK,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAZ,UAQGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,SAACC,IAAD,CAAOC,CAAP,CAAa,CAC5B,mBAAO,KAAC,IAAD,EAAM,IAAI,CAAED,IAAZ,CAA0B,QAAQ,CAAEJ,KAAK,CAACM,YAA1C,EAAuBD,CAAvB,CAAP,CACD,CAFA,CARH,EADF,CAcD,CAvCD,CA8CA,cAAeN,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport { listNewsFeed } from \"../../api/PostApi/postApi\";\nimport PropTypes from \"prop-types\";\nimport Post from \"./Post\";\nimport LoadingSpinner from \"../../pages/Spinner/LoadingSpinner\";\n\nconst PostList = (props) => {\n  // const [listItem, setListItem] = useState(\n  //   Array.from(Array(5).keys(), (n) => (n = +1))\n  // );\n  // const [loading, setLoading] = useState(false);\n\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", handleScroll);\n  //   return () => window.removeEventListener(\"scroll\", handleScroll);\n  // }, []);\n\n  // const handleScroll = () => {\n  //   if (\n  //     window.innerHeight + document.documentElement.scrollTop !==\n  //     document.documentElement.offsetHeight\n  //   )\n  //     return;\n  //   //setLoading(true);\n  // };\n\n  // useEffect(() => {\n  //   if (!loading) return;\n\n  // },[]);\n\n  return (\n    <div style={{ marginTop: \"24px\" }}>\n      {/* {loading ? (\n        <LoadingSpinner />\n      ) : (\n        props.posts.map((item, i) => {\n          return <Post post={item} key={i} onRemove={props.removeUpdate} />;\n        })\n      )} */}\n      {props.posts.map((item, i) => {\n        return <Post post={item} key={i} onRemove={props.removeUpdate} />;\n      })}\n    </div>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  removeUpdate: PropTypes.func.isRequired,\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}