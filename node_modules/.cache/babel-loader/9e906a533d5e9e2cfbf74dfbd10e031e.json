{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Comments/Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from \"@material-ui/core/Icon\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { comment, unComment } from \"../../api/PostApi/postApi\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s();\n\n  const classes = useStyles();\n  const [text, setText] = useState(\"\");\n  const jwt = auth.isAuthenticated();\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const addComment = async e => {\n    if (e.keyCode === 13 && e.target.value) {\n      e.preventDefault();\n      const data = await comment({\n        userId: jwt.user._id\n      }, {\n        t: jwt.token\n      }, props.postId, {\n        text: text\n      });\n      console.log(\"--- Comment data ---\");\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setText(\"\");\n        props.updateComments(data.comments);\n      }\n    }\n  };\n\n  const deleteComment = comment => e => {\n    unComment({\n      userId: jwt.user._id\n    }, {\n      t: jwt.token\n    }, props.postId, comment).then(data => {\n      console.log(\"--- delete Comment data --- \");\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        props.updateComments(data.comments);\n      }\n    });\n  };\n\n  const commentBody = item => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.commentText,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/user/${item.postedBy._id}`,\n        className: classes.textDec,\n        children: item.postedBy.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), item.text, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.commentDate,\n        children: [new Date(item.created).toDateString(), \" |\", auth.isAuthenticated().user._id === item.postedBy._id && /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          onClick: deleteComment(item),\n          className: classes.commentDelete,\n          color: \"secondary\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.smallAvatar,\n        src: `${process.env.REACT_APP_API}/users/photo/${auth.isAuthenticated().user._id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this),\n      title: /*#__PURE__*/_jsxDEV(TextField, {\n        onKeyDown: addComment,\n        multiline: true,\n        value: text,\n        onChange: handleChange,\n        placeholder: \"Write something ...\",\n        className: classes.commentField,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this),\n      className: classes.cardHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), props.comments.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.smallAvatar,\n          src: `${process.env.REACT_APP_API}/users/photo/${item.postedBy._id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this),\n        title: commentBody(item),\n        className: classes.cardHeader\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"HiBFSJMVT7XY25M/ZmPAyuSmc44=\", false, function () {\n  return [useStyles];\n});\n\n_c = Comments;\nComments.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  updateComments: PropTypes.func.isRequired\n};\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Comments/Comments.jsx"],"names":["React","useState","auth","CardHeader","TextField","Avatar","Icon","PropTypes","Link","comment","unComment","DeleteForeverIcon","useStyles","Comments","props","classes","text","setText","jwt","isAuthenticated","handleChange","e","target","value","addComment","keyCode","preventDefault","data","userId","user","_id","t","token","postId","console","log","error","updateComments","comments","deleteComment","then","commentBody","item","commentText","postedBy","textDec","name","commentDate","Date","created","toDateString","commentDelete","smallAvatar","process","env","REACT_APP_API","commentField","cardHeader","map","i","propTypes","string","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from \"@material-ui/core/Icon\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { comment, unComment } from \"../../api/PostApi/postApi\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport useStyles from \"./styles\";\n\nconst Comments = (props) => {\n  const classes = useStyles();\n  const [text, setText] = useState(\"\");\n  const jwt = auth.isAuthenticated();\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const addComment = async (e) => {\n    if (e.keyCode === 13 && e.target.value) {\n      e.preventDefault();\n\n      const data = await comment(\n        { userId: jwt.user._id },\n        { t: jwt.token },\n        props.postId,\n        {\n          text: text,\n        }\n      );\n\n      console.log(\"--- Comment data ---\");\n      console.log(data);\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setText(\"\");\n        props.updateComments(data.comments);\n      }\n    }\n  };\n\n  const deleteComment = (comment) => (e) => {\n    unComment(\n      { userId: jwt.user._id },\n      { t: jwt.token },\n      props.postId,\n      comment\n    ).then((data) => {\n      console.log(\"--- delete Comment data --- \");\n      console.log(data);\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        props.updateComments(data.comments);\n      }\n    });\n  };\n\n  const commentBody = (item) => {\n    return (\n      <p className={classes.commentText}>\n        <Link to={`/user/${item.postedBy._id}`} className={classes.textDec}>\n          {item.postedBy.name}\n        </Link>\n        <br />\n        {item.text}\n        <span className={classes.commentDate}>\n          {new Date(item.created).toDateString()} |\n          {auth.isAuthenticated().user._id === item.postedBy._id && (\n            <DeleteForeverIcon\n              onClick={deleteComment(item)}\n              className={classes.commentDelete}\n              color=\"secondary\"\n            >\n              Delete\n            </DeleteForeverIcon>\n          )}\n        </span>\n      </p>\n    );\n  };\n\n  return (\n    <div>\n      <CardHeader\n        avatar={\n          <Avatar\n            className={classes.smallAvatar}\n            src={`${process.env.REACT_APP_API}/users/photo/${\n              auth.isAuthenticated().user._id\n            }`}\n          />\n        }\n        title={\n          <TextField\n            onKeyDown={addComment}\n            multiline\n            value={text}\n            onChange={handleChange}\n            placeholder=\"Write something ...\"\n            className={classes.commentField}\n            margin=\"normal\"\n          />\n        }\n        className={classes.cardHeader}\n      />\n      {props.comments.map((item, i) => {\n        return (\n          <CardHeader\n            avatar={\n              <Avatar\n                className={classes.smallAvatar}\n                src={`${process.env.REACT_APP_API}/users/photo/${item.postedBy._id}`}\n              />\n            }\n            title={commentBody(item)}\n            className={classes.cardHeader}\n            key={i}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nComments.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  updateComments: PropTypes.func.isRequired,\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}