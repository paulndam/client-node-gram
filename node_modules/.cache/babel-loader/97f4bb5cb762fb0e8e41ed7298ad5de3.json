{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Post/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport Divider from \"@material-ui/core/Divider\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport { remove, like, unlike } from \"../../api/PostApi/postApi\";\nimport Comments from \"../Comments/Comments\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    margin: \"auto\",\n    marginBottom: theme.spacing(3),\n    backgroundColor: \"rgba(0, 0, 0, 0.06)\"\n  },\n  cardContent: {\n    backgroundColor: \"white\",\n    padding: `${theme.spacing(2)}px 0px`\n  },\n  cardHeader: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  text: {\n    margin: theme.spacing(2)\n  },\n  photo: {\n    textAlign: \"center\",\n    backgroundColor: \"#FFFFFF\",\n    padding: theme.spacing(1)\n  },\n  media: {\n    //height: 200,\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    objectFit: \"contain\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst Post = props => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const jwt = auth.isAuthenticated();\n\n  const checkLike = likes => {\n    let match = likes.indexOf(jwt.user._id) !== -1;\n    return match;\n  };\n\n  const [values, setValues] = useState({\n    like: checkLike(props.post.likes),\n    likes: props.post.likes.length,\n    comments: props.post.comments\n  });\n\n  const clickLike = () => {\n    let callApi = values.like ? unlike : like;\n    callApi({\n      userId: jwt.user._id\n    }, {\n      t: jwt.token\n    }, props.post._id).then(data => {\n      console.log(\"-- Checking Unliking data \");\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setValues({ ...values,\n          like: !values.like,\n          likes: data.likes.length\n        });\n      }\n    });\n  };\n\n  const updateComments = comments => {\n    setValues({ ...values,\n      comments: comments\n    });\n  };\n\n  const deletePost = () => {\n    remove({\n      postId: props.post._id\n    }, {\n      t: jwt.token\n    }).then(data => {\n      console.log(\"--- deleting data post in delete post method --\");\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        props.onRemove(props.post);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      style: {\n        backgroundColor: \"#eeeeee\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        style: {\n          backgroundColor: \"#F6F6F6\"\n        },\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: `${process.env.REACT_APP_API}/users/photo/${props.post.postedBy._id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this),\n        action: props.post.postedBy._id === auth.isAuthenticated().user._id && /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: deletePost,\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this),\n        title: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"#fff\",\n          className: classes.button,\n          onClick: () => history.push(`/user/${props.post.postedBy._id}`),\n          children: props.post.postedBy.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this),\n        subheader: new Date(props.post.created).toDateString(),\n        className: classes.cardHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.cardContent,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          className: classes.text,\n          children: props.post.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), props.post.photo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.photo,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.media,\n            src: `${process.env.REACT_APP_API}/posts/photo/${props.post._id}`,\n            alt: \"pict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [values.like ? /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: clickLike,\n          className: classes.button,\n          \"aria-label\": \"Like\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: clickLike,\n          className: classes.button,\n          \"aria-label\": \"Unlike\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: values.likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.button,\n          \"aria-label\": \"Comment\" //color=\"secondary\"\n          ,\n          children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: values.comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        postId: props.post._id,\n        comments: values.comments,\n        updateComments: updateComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"jqR7lHAIougiNqLdQKjC8G6dBrU=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Post;\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Post/Post.jsx"],"names":["React","useState","useEffect","useHistory","Card","CardHeader","CardContent","CardActions","Typography","Avatar","IconButton","DeleteIcon","DeleteForeverIcon","FavoriteIcon","FavoriteBorderIcon","CommentIcon","Divider","PropTypes","makeStyles","Link","auth","remove","like","unlike","Comments","Button","useStyles","theme","card","maxWidth","margin","marginBottom","spacing","backgroundColor","cardContent","padding","cardHeader","paddingTop","paddingBottom","text","photo","textAlign","media","maxHeight","objectFit","button","Post","props","classes","history","jwt","isAuthenticated","checkLike","likes","match","indexOf","user","_id","values","setValues","post","length","comments","clickLike","callApi","userId","t","token","then","data","console","log","error","updateComments","deletePost","postId","onRemove","process","env","REACT_APP_API","postedBy","push","name","Date","created","toDateString","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport Divider from \"@material-ui/core/Divider\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport { remove, like, unlike } from \"../../api/PostApi/postApi\";\nimport Comments from \"../Comments/Comments\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    maxWidth: 600,\n    margin: \"auto\",\n    marginBottom: theme.spacing(3),\n    backgroundColor: \"rgba(0, 0, 0, 0.06)\",\n  },\n  cardContent: {\n    backgroundColor: \"white\",\n    padding: `${theme.spacing(2)}px 0px`,\n  },\n  cardHeader: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  text: {\n    margin: theme.spacing(2),\n  },\n  photo: {\n    textAlign: \"center\",\n    backgroundColor: \"#FFFFFF\",\n    padding: theme.spacing(1),\n  },\n  media: {\n    //height: 200,\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    objectFit: \"contain\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst Post = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const jwt = auth.isAuthenticated();\n  const checkLike = (likes) => {\n    let match = likes.indexOf(jwt.user._id) !== -1;\n    return match;\n  };\n  const [values, setValues] = useState({\n    like: checkLike(props.post.likes),\n    likes: props.post.likes.length,\n    comments: props.post.comments,\n  });\n\n  const clickLike = () => {\n    let callApi = values.like ? unlike : like;\n    callApi(\n      {\n        userId: jwt.user._id,\n      },\n      {\n        t: jwt.token,\n      },\n      props.post._id\n    ).then((data) => {\n      console.log(\"-- Checking Unliking data \");\n      console.log(data);\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setValues({ ...values, like: !values.like, likes: data.likes.length });\n      }\n    });\n  };\n\n  const updateComments = (comments) => {\n    setValues({ ...values, comments: comments });\n  };\n\n  const deletePost = () => {\n    remove({ postId: props.post._id }, { t: jwt.token }).then((data) => {\n      console.log(\"--- deleting data post in delete post method --\");\n      console.log(data);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        props.onRemove(props.post);\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Card className={classes.card} style={{ backgroundColor: \"#eeeeee\" }}>\n        <CardHeader\n          style={{ backgroundColor: \"#F6F6F6\" }}\n          avatar={\n            <Avatar\n              src={`${process.env.REACT_APP_API}/users/photo/${props.post.postedBy._id}`}\n            />\n          }\n          action={\n            props.post.postedBy._id === auth.isAuthenticated().user._id && (\n              <IconButton onClick={deletePost} color=\"secondary\">\n                <DeleteForeverIcon />\n              </IconButton>\n            )\n          }\n          title={\n            <Button\n              variant=\"contained\"\n              color=\"#fff\"\n              className={classes.button}\n              onClick={() => history.push(`/user/${props.post.postedBy._id}`)}\n            >\n              {/* <Link to={`/user/${props.post.postedBy._id}`} underline={\"none\"}>\n                {props.post.postedBy.name}\n              </Link> */}\n              {props.post.postedBy.name}\n            </Button>\n          }\n          subheader={new Date(props.post.created).toDateString()}\n          className={classes.cardHeader}\n        />\n        <CardContent className={classes.cardContent}>\n          <Typography component=\"p\" className={classes.text}>\n            {props.post.text}\n          </Typography>\n          {props.post.photo && (\n            <div className={classes.photo}>\n              <img\n                className={classes.media}\n                src={`${process.env.REACT_APP_API}/posts/photo/${props.post._id}`}\n                alt=\"pict\"\n              />\n            </div>\n          )}\n        </CardContent>\n        <CardActions>\n          {values.like ? (\n            <IconButton\n              onClick={clickLike}\n              className={classes.button}\n              aria-label=\"Like\"\n              color=\"secondary\"\n            >\n              <FavoriteIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              onClick={clickLike}\n              className={classes.button}\n              aria-label=\"Unlike\"\n              color=\"secondary\"\n            >\n              <FavoriteBorderIcon />\n            </IconButton>\n          )}{\" \"}\n          <span>{values.likes}</span>\n          <IconButton\n            className={classes.button}\n            aria-label=\"Comment\"\n            //color=\"secondary\"\n          >\n            <CommentIcon />\n          </IconButton>{\" \"}\n          <span>{values.comments.length}</span>\n        </CardActions>\n        <Divider />\n        <Comments\n          postId={props.post._id}\n          comments={values.comments}\n          updateComments={updateComments}\n        />\n      </Card>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}