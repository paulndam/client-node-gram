{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Post/NewPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from \"@material-ui/core/Icon\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport { create } from \"../../api/PostApi/postApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#efefef\",\n    padding: `${theme.spacing(3)}px 0px 1px`\n  },\n  card: {\n    maxWidth: 600,\n    margin: \"auto\",\n    marginBottom: theme.spacing(3),\n    backgroundColor: \"rgba(65, 150, 136, 0.09)\",\n    boxShadow: \"none\"\n  },\n  cardContent: {\n    backgroundColor: \"white\",\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  cardHeader: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  photoButton: {\n    height: 30,\n    marginBottom: 5\n  },\n  input: {\n    display: \"none\"\n  },\n  textField: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    width: \"90%\"\n  },\n  submit: {\n    margin: theme.spacing(2)\n  },\n  filename: {\n    verticalAlign: \"super\"\n  }\n}));\n\nconst NewPost = props => {\n  _s();\n\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    text: \"\",\n    photo: \"\",\n    error: \"\",\n    user: {}\n  });\n  const jwt = auth.isAuthenticated();\n  useEffect(() => {\n    setValues({ ...values,\n      user: auth.isAuthenticated().user\n    });\n  }, []);\n\n  const clickPost = () => {\n    let postData = new FormData();\n    postData.append(\"text\", values.text);\n    postData.append(\"photo\", values.photo);\n    create({\n      userId: jwt.user._id\n    }, {\n      t: jwt.token\n    }, postData).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          text: \"\",\n          photo: \"\"\n        });\n        props.addUpdate(data);\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const photoUrl = values.user._id && `${process.env.REACT_APP_API}/users/photo/${values.user._id}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: photoUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this),\n        title: values.user.name,\n        className: classes.cardHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.cardContent,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"say something ...\",\n          multiline: true,\n          rows: \"3\",\n          value: values.text,\n          onChange: handleChange(\"text\"),\n          className: classes.textField,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          onChange: handleChange(\"photo\"),\n          className: classes.input,\n          id: \"icon-button-file\",\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon-button-file\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"secondary\",\n            className: classes.photoButton,\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.filename,\n          children: values.photo ? values.photo.name : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), values.error && /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          color: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            color: \"error\",\n            className: classes.error,\n            children: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), values.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: values.text === \"\",\n          onClick: clickPost,\n          className: classes.submit,\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPost, \"WeM3TLiAij6ZK7BLIJ+edlkihbo=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewPost;\nNewPost.propTypes = {\n  addUpdate: PropTypes.func.isRequired\n};\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/components/Post/NewPost.jsx"],"names":["React","useState","useEffect","auth","Card","CardHeader","CardContent","CardActions","Button","TextField","Typography","Avatar","Icon","PropTypes","makeStyles","IconButton","PhotoCamera","create","useStyles","theme","root","backgroundColor","padding","spacing","card","maxWidth","margin","marginBottom","boxShadow","cardContent","paddingTop","paddingBottom","cardHeader","photoButton","height","input","display","textField","marginLeft","marginRight","width","submit","filename","verticalAlign","NewPost","props","classes","values","setValues","text","photo","error","user","jwt","isAuthenticated","clickPost","postData","FormData","append","userId","_id","t","token","then","data","addUpdate","handleChange","name","event","value","target","files","photoUrl","process","env","REACT_APP_API","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport auth from \"../../utils/Auth/authHelper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from \"@material-ui/core/Icon\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport { create } from \"../../api/PostApi/postApi\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#efefef\",\n    padding: `${theme.spacing(3)}px 0px 1px`,\n  },\n  card: {\n    maxWidth: 600,\n    margin: \"auto\",\n    marginBottom: theme.spacing(3),\n    backgroundColor: \"rgba(65, 150, 136, 0.09)\",\n    boxShadow: \"none\",\n  },\n  cardContent: {\n    backgroundColor: \"white\",\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  cardHeader: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  photoButton: {\n    height: 30,\n    marginBottom: 5,\n  },\n  input: {\n    display: \"none\",\n  },\n  textField: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    width: \"90%\",\n  },\n  submit: {\n    margin: theme.spacing(2),\n  },\n  filename: {\n    verticalAlign: \"super\",\n  },\n}));\n\nconst NewPost = (props) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    text: \"\",\n    photo: \"\",\n    error: \"\",\n    user: {},\n  });\n  const jwt = auth.isAuthenticated();\n  useEffect(() => {\n    setValues({ ...values, user: auth.isAuthenticated().user });\n  }, []);\n  const clickPost = () => {\n    let postData = new FormData();\n    postData.append(\"text\", values.text);\n    postData.append(\"photo\", values.photo);\n    create(\n      {\n        userId: jwt.user._id,\n      },\n      {\n        t: jwt.token,\n      },\n      postData\n    ).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ ...values, text: \"\", photo: \"\" });\n        props.addUpdate(data);\n      }\n    });\n  };\n  const handleChange = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    setValues({ ...values, [name]: value });\n  };\n  const photoUrl =\n    values.user._id &&\n    `${process.env.REACT_APP_API}/users/photo/${values.user._id}`;\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={<Avatar src={photoUrl} />}\n          title={values.user.name}\n          className={classes.cardHeader}\n        />\n        <CardContent className={classes.cardContent}>\n          <TextField\n            placeholder=\"say something ...\"\n            multiline\n            rows=\"3\"\n            value={values.text}\n            onChange={handleChange(\"text\")}\n            className={classes.textField}\n            margin=\"normal\"\n          />\n          <input\n            accept=\"image/*\"\n            onChange={handleChange(\"photo\")}\n            className={classes.input}\n            id=\"icon-button-file\"\n            type=\"file\"\n          />\n          <label htmlFor=\"icon-button-file\">\n            <IconButton\n              color=\"secondary\"\n              className={classes.photoButton}\n              component=\"span\"\n            >\n              <PhotoCamera />\n            </IconButton>\n          </label>{\" \"}\n          <span className={classes.filename}>\n            {values.photo ? values.photo.name : \"\"}\n          </span>\n          {values.error && (\n            <Typography component=\"p\" color=\"error\">\n              <Icon color=\"error\" className={classes.error}>\n                error\n              </Icon>\n              {values.error}\n            </Typography>\n          )}\n        </CardContent>\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={values.text === \"\"}\n            onClick={clickPost}\n            className={classes.submit}\n          >\n            POST\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nNewPost.propTypes = {\n  addUpdate: PropTypes.func.isRequired,\n};\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}