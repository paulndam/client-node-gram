{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/paulndam/Documents/Node-Js/Sample-Mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var create=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(params,credentials,post){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(process.env.REACT_APP_API,\"/posts/new/\").concat(params.userId),{method:\"POST\",headers:{Accept:\"application/json\",Authorization:\"Bearer \".concat(credentials.t)},body:post});case 3:response=_context.sent;_context.next=6;return response.json();case 6:return _context.abrupt(\"return\",_context.sent);case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function create(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var listByUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params,credentials){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"\".concat(process.env.REACT_APP_API,\"/posts/by/\").concat(params.userId),{method:\"GET\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(credentials.t)}});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:return _context2.abrupt(\"return\",_context2.sent);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(\"---error fetching list of for one user  api in the client side --\");console.log(_context2.t0);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function listByUser(_x4,_x5){return _ref2.apply(this,arguments);};}();var listNewsFeed=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params,credentials,signal){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(process.env.REACT_APP_API,\"/posts/feed/\").concat(params.userId),{method:\"GET\",signal:signal,headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+credentials.t}});case 3:response=_context3.sent;console.log(\"---response from getting news feed ---\",response);_context3.next=7;return response.json();case 7:return _context3.abrupt(\"return\",_context3.sent);case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.log(\"---error fetching list new feed from post api in the client side --\");console.log(_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function listNewsFeed(_x6,_x7,_x8){return _ref3.apply(this,arguments);};}();var remove=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params,credentials){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"\".concat(process.env.REACT_APP_API,\"/posts/\").concat(params.postId),{method:\"DELETE\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(credentials.t)}});case 3:response=_context4.sent;_context4.next=6;return response.json();case 6:return _context4.abrupt(\"return\",_context4.sent);case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](0);console.log(\"---error removing post from post api in the client side --\");console.log(_context4.t0);case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,9]]);}));return function remove(_x9,_x10){return _ref4.apply(this,arguments);};}();var like=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params,credentials,postId){var response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(\"\".concat(process.env.REACT_APP_API,\"/posts/like\"),{method:\"PUT\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(credentials.t)},body:JSON.stringify({userId:params.userId,postId:postId})});case 3:response=_context5.sent;_context5.next=6;return response.json();case 6:return _context5.abrupt(\"return\",_context5.sent);case 9:_context5.prev=9;_context5.t0=_context5[\"catch\"](0);console.log(\"---error liking post from post api in the client side --\");console.log(_context5.t0);case 13:case\"end\":return _context5.stop();}}},_callee5,null,[[0,9]]);}));return function like(_x11,_x12,_x13){return _ref5.apply(this,arguments);};}();// const unlike = async (params, credentials, postId) => {\n//   try {\n//     let response = await fetch(`${process.env.REACT_APP_API}/posts/unlike`, {\n//       method: \"PUT\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${credentials.t}`,\n//       },\n//       body: JSON.stringify({ userId: params.userId, postId: postId }),\n//     });\n//     return await response.json();\n//   } catch (err) {\n//     console.log(\"---error unliking post from post api in the client side --\");\n//     console.log(err);\n//   }\n// };\nvar unlike=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(params,credentials,postId){var response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return fetch(\"\".concat(process.env.REACT_APP_API,\"/posts/unlike\"),{method:\"PUT\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+credentials.t},body:JSON.stringify({userId:params.userId,postId:postId})});case 3:response=_context6.sent;_context6.next=6;return response.json();case 6:return _context6.abrupt(\"return\",_context6.sent);case 9:_context6.prev=9;_context6.t0=_context6[\"catch\"](0);console.log(_context6.t0);case 12:case\"end\":return _context6.stop();}}},_callee6,null,[[0,9]]);}));return function unlike(_x14,_x15,_x16){return _ref6.apply(this,arguments);};}();var comment=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(params,credentials,postId,_comment){var response;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return fetch(\"\".concat(process.env.REACT_APP_API,\"/posts/comment\"),{method:\"PUT\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(credentials.t)},body:JSON.stringify({userId:params.userId,postId:postId,comment:_comment})});case 3:response=_context7.sent;_context7.next=6;return response.json();case 6:return _context7.abrupt(\"return\",_context7.sent);case 9:_context7.prev=9;_context7.t0=_context7[\"catch\"](0);console.log(\"---error commenting post from post api in the client side --\");console.log(_context7.t0);case 13:case\"end\":return _context7.stop();}}},_callee7,null,[[0,9]]);}));return function comment(_x17,_x18,_x19,_x20){return _ref7.apply(this,arguments);};}();var unComment=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(params,credentials,postId,comment){var response;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return fetch(\"\".concat(process.env.REACT_APP_API,\"/posts/uncomment\"),{method:\"PUT\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(credentials.t)},body:JSON.stringify({userId:params.userId,postId:postId,comment:comment})});case 3:response=_context8.sent;_context8.next=6;return response.json();case 6:return _context8.abrupt(\"return\",_context8.sent);case 9:_context8.prev=9;_context8.t0=_context8[\"catch\"](0);console.log(\"---error un-commenting post from post api in the client side --\");console.log(_context8.t0);case 13:case\"end\":return _context8.stop();}}},_callee8,null,[[0,9]]);}));return function unComment(_x21,_x22,_x23,_x24){return _ref8.apply(this,arguments);};}();export{listNewsFeed,listByUser,create,remove,like,unlike,comment,unComment};","map":{"version":3,"sources":["/Users/paulndam/Documents/Node-Js/Sample-Mern/client/src/api/PostApi/postApi.js"],"names":["axios","create","params","credentials","post","fetch","process","env","REACT_APP_API","userId","method","headers","Accept","Authorization","t","body","response","json","console","log","listByUser","listNewsFeed","signal","remove","postId","like","JSON","stringify","unlike","comment","unComment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst create = async (params, credentials, post) => {\n  try {\n    let response = await fetch(\n      `${process.env.REACT_APP_API}/posts/new/${params.userId}`,\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${credentials.t}`,\n        },\n        body: post,\n      }\n    );\n\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst listByUser = async (params, credentials) => {\n  try {\n    let response = await fetch(\n      `${process.env.REACT_APP_API}/posts/by/${params.userId}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${credentials.t}`,\n        },\n      }\n    );\n\n    return await response.json();\n  } catch (err) {\n    console.log(\n      \"---error fetching list of for one user  api in the client side --\"\n    );\n    console.log(err);\n  }\n};\n\nconst listNewsFeed = async (params, credentials, signal) => {\n  try {\n    let response = await fetch(\n      `${process.env.REACT_APP_API}/posts/feed/${params.userId}`,\n      {\n        method: \"GET\",\n        signal: signal,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + credentials.t,\n        },\n      }\n    );\n    console.log(\"---response from getting news feed ---\", response);\n    return await response.json();\n  } catch (err) {\n    console.log(\n      \"---error fetching list new feed from post api in the client side --\"\n    );\n    console.log(err);\n  }\n};\n\nconst remove = async (params, credentials) => {\n  try {\n    let response = await fetch(\n      `${process.env.REACT_APP_API}/posts/${params.postId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${credentials.t}`,\n        },\n      }\n    );\n\n    return await response.json();\n  } catch (err) {\n    console.log(\"---error removing post from post api in the client side --\");\n    console.log(err);\n  }\n};\n\nconst like = async (params, credentials, postId) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/posts/like`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${credentials.t}`,\n      },\n      body: JSON.stringify({ userId: params.userId, postId: postId }),\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(\"---error liking post from post api in the client side --\");\n    console.log(err);\n  }\n};\n\n// const unlike = async (params, credentials, postId) => {\n//   try {\n//     let response = await fetch(`${process.env.REACT_APP_API}/posts/unlike`, {\n//       method: \"PUT\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${credentials.t}`,\n//       },\n//       body: JSON.stringify({ userId: params.userId, postId: postId }),\n//     });\n//     return await response.json();\n//   } catch (err) {\n//     console.log(\"---error unliking post from post api in the client side --\");\n//     console.log(err);\n//   }\n// };\n\nconst unlike = async (params, credentials, postId) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/posts/unlike`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t,\n      },\n      body: JSON.stringify({ userId: params.userId, postId: postId }),\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst comment = async (params, credentials, postId, comment) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/posts/comment`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${credentials.t}`,\n      },\n      body: JSON.stringify({\n        userId: params.userId,\n        postId: postId,\n        comment: comment,\n      }),\n    });\n\n    return await response.json();\n  } catch (err) {\n    console.log(\"---error commenting post from post api in the client side --\");\n    console.log(err);\n  }\n};\n\nconst unComment = async (params, credentials, postId, comment) => {\n  try {\n    let response = await fetch(`${process.env.REACT_APP_API}/posts/uncomment`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${credentials.t}`,\n      },\n      body: JSON.stringify({\n        userId: params.userId,\n        postId: postId,\n        comment: comment,\n      }),\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(\n      \"---error un-commenting post from post api in the client side --\"\n    );\n    console.log(err);\n  }\n};\n\nexport {\n  listNewsFeed,\n  listByUser,\n  create,\n  remove,\n  like,\n  unlike,\n  comment,\n  unComment,\n};\n"]},"metadata":{},"sourceType":"module"}